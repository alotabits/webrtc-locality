:global(*) {
	box-sizing: border-box;
}

:global(html) {
	font-family: sans-serif;
	--gray-1: lightgray;
	--gray-2: gray;
	--padding-1: 5px;
	--padding-2: 10px;
	--margin-1: 5px;
	--margin-2: 10px;
	--primary: #dc7e13;
	--secondary: hsl(207, 100%, 60%);
}

:global(body) {
	margin: 0;
}

:global(input) {
	-webkit-appearance: none;
}

.transformWrapper {
	background: gray;
	max-width: 100vw;
	max-height: 100vh;
}

.transformContent {
	background-color: white;
	background-size: 40px 40px;
	background-image: radial-gradient(circle, var(--gray-1) 1px, transparent 1px);
}

.locator {
	position: absolute;
	inset: 0;
}

.title {
	font-size: 1.1em;
	position: relative;
	margin-bottom: 1ex;
	text-transform: uppercase;
	font-size: 0.9em;
}

.title:first-letter {
	font-size: 1.1em;
}

.title sup {
	font-size: 0.6em;
	position: absolute;
	transform: translate(0.25ex, -0.25ex);
}

.Button {
	display: inline-block;
	position: relative;
	background: var(--primary);
	border-radius: 1em;
	height: 2em;
	min-width: 2em;
}

.Button > .buttonContent {
	display: flex;
	flex-flow: row nowrap;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 100%;
}

.Button > button {
	position: absolute;
	inset: 0;
	opacity: 0;
}

.Avatar {
	background: white;
	position: absolute;

	padding: 10px;
	box-shadow: 0 0 1px 0px lightblue, 0 0 5px var(--gray-1) inset,
		1px 1px 5px var(--gray-1);
	border-radius: 50%;
	font-family: sans-serif;
}

.Avatar video {
	display: block;
	width: 150px;
	height: 150px;
	object-fit: cover;
	border-radius: 50%;
	z-index: -1;
	position: relative;
	opacity: 0;
}

.Avatar .avatarInset {
	border-radius: 50%;
	box-shadow: 0 0 10px var(--gray-1) inset;
	isolation: isolate;
}

.Avatar.avatarVideo video {
	transition: opacity 1s ease;
	opacity: 1;
}

.Avatar .avatarVolume {
	position: absolute;
	bottom: 10px;
	right: 10px;
	min-width: 32px;
	/* height: 32px; */
	border-radius: 16px;
	background: white;
	display: flex;
	justify-content: center;
	align-items: center;
	box-shadow: 0 0 0 1px var(--gray-1);
	font-size: 80%;
	padding: var(--padding-1);
}

.CallDialog {
	background: white;
	box-shadow: 0 0 10px var(--gray-1);
	position: fixed;
	bottom: 10px;
	right: 10px;
	padding: 10px;
}

.CallDialog button + button {
	margin-left: 10px;
}

.Avatars {
	pointer-events: none;
}

.HUD {
	position: fixed;
	inset: 0;
	box-shadow: 0 0 20px var(--gray-1) inset;
	pointer-events: none;
}

.HUD * {
	pointer-events: auto;
}

.HUD:hover {
	width: 100%;
	height: 100%;
}

.HUD .log {
	position: absolute;
	left: 10px;
	top: 10px;
	width: 30px;
	height: 30px;
	overflow: scroll;
	border-radius: 15px;
	font-size: 70%;
	background: rgba(0, 0, 255, 0.2);
	color: transparent;
}

.HUD .log::-webkit-scrollbar {
	display: none;
}

.HUD .logOpen {
	text-shadow: 1px 1px 1px white;
	right: 10px;
	bottom: 10px;
	width: auto;
	height: auto;
	padding: 30px;
	color: black;
}

.HUD .logEntry {
	display: flex;
	flex-flow: row nowrap;
}

.HUD .logEntry .logArrow {
	font-size: 0.8em;
}

.HUD .logEntry .logText {
	margin: 0;
}

.Region {
	position: absolute;
	display: flex;
	flex-flow: row nowrap;
	gap: 5px;
}

.Region.topLeft,
.Region.topRight {
	top: 0;
	margin-top: var(--margin-2);
}

.Region.bottomLeft,
.Region.bottomRight {
	bottom: 0;
	margin-bottom: var(--margin-2);
}

.Region.topLeft,
.Region.bottomLeft {
	left: 0;
	margin-left: var(--margin-2);
}

.Region.topRight,
.Region.bottomRight {
	right: 0;
	margin-right: var(--margin-2);
}

.CallButton {
	position: absolute;
	right: 20px;
	top: 20px;
	display: flex;
	flex-flow: column nowrap;
	align-items: center;
	gap: 10px;
	font-family: sans-serif;
}

.CallButton .callButton {
	border-radius: 50%;
	width: 40px;
	height: 40px;
	border: none;
	background: rgb(49, 204, 35);
	cursor: pointer;
	box-shadow: 0 0 4px 1px var(--gray-1);
}

.CallButton .callButton svg path {
	fill: white;
}

.callButtonOverlay {
	position: fixed;
	inset: 0;
	background: rgba(0, 0, 0, 0.5);
	display: flex;
	justify-content: center;
	align-items: center;
}

.callButtonOverlay .callButtonDialog {
	background: white;
	display: flex;
	flex-flow: column nowrap;
	justify-content: center;
	align-items: center;
	padding: 20px;
	gap: 10px;
}

.AnswerButton {
	position: absolute;
	left: 20px;
	top: 20px;
	display: flex;
	flex-flow: column nowrap;
	align-items: center;
	gap: 10px;
	font-family: sans-serif;
}

.AnswerButton .answerButton {
	border-radius: 50%;
	width: 40px;
	height: 40px;
	border: none;
	background: rgb(49, 204, 35);
	cursor: pointer;
	box-shadow: 0 0 4px 1px var(--gray-1);
}

.AnswerButton .answerButton svg path {
	fill: white;
}

@keyframes spin {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
}

.spin {
	animation-name: spin;
	animation-duration: 1000ms;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
}

.StartForm,
.QrDialog {
	display: flex;
	flex-flow: column nowrap;
	justify-content: center;
	align-items: center;
	gap: 10px;

	position: absolute;
	inset: 0;
	margin: auto;
	background: white;
	width: 400px;
	height: 400px;
	border-radius: 3px;
	box-shadow: 1px 1px 8px var(--gray-1);
	font-size: 1.2em;
}

@media (max-width: 400px) {
	.StartForm,
	.QrDialog {
		width: 320px;
	}
}

.StartForm .video {
	border-radius: 50%;
	padding: 10px;
	margin-bottom: 10px;
	background: var(--secondary);
}

.StartForm .video > video {
	width: 150px;
	height: 150px;
	border-radius: 50%;
	object-fit: cover;
	display: block;
	background: white;
}

.StartForm .startField input {
	appearance: none;
	border: none;
	border-radius: 3px;
	box-shadow: 0 0 0 1px var(--gray-1);
	padding: var(--padding-1);
}

.StartForm button,
.QrDialog button {
	appearance: none;
	border: none;
	background: white;
	padding: var(--padding-1);
	background: var(--primary);
	color: white;
	padding: var(--padding-1) var(--padding-2);
	border-radius: 3px;
}

.StartForm button:disabled {
	opacity: 0.5;
}
